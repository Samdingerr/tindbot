{"ast":null,"code":"var _jsxFileName = \"/Users/samdinger/Desktop/Tind/tindbot-platform-v1/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  async function sendMessage() {\n    const res = await fetch(\"https://tindbot-production.up.railway.app/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    const data = await res.json();\n    setMessages([...messages, {\n      from: \"user\",\n      text: input\n    }, {\n      from: \"bot\",\n      text: data.choices[0].message.content\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TindBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [m.from, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this), \" \", m.text]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sendMessage","res","fetch","method","headers","body","JSON","stringify","message","data","json","from","text","choices","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","m","i","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/samdinger/Desktop/Tind/tindbot-platform-v1/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  async function sendMessage() {\n    const res = await fetch(\"https://tindbot-production.up.railway.app/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ message: input }),\n    });\n    const data = await res.json();\n    setMessages([...messages, { from: \"user\", text: input }, { from: \"bot\", text: data.choices[0].message.content }]);\n    setInput(\"\");\n  }\n\n  return (\n    <div>\n      <h1>TindBot</h1>\n      {messages.map((m, i) => (\n        <p key={i}><strong>{m.from}:</strong> {m.text}</p>\n      ))}\n      <input value={input} onChange={e => setInput(e.target.value)} />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,eAAeS,WAAWA,CAAA,EAAG;IAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEV;MAAM,CAAC;IACzC,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC7Bb,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEe,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEd;IAAM,CAAC,EAAE;MAAEa,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAEH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACL,OAAO,CAACM;IAAQ,CAAC,CAAC,CAAC;IACjHf,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfvB,QAAQ,CAACwB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACjB7B,OAAA;MAAAsB,QAAA,gBAAWtB,OAAA;QAAAsB,QAAA,GAASM,CAAC,CAACV,IAAI,EAAC,GAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACE,CAAC,CAACT,IAAI;IAAA,GAArCU,CAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwC,CAClD,CAAC,eACF1B,OAAA;MAAO8B,KAAK,EAAEzB,KAAM;MAAC0B,QAAQ,EAAEC,CAAC,IAAI1B,QAAQ,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChE1B,OAAA;MAAQkC,OAAO,EAAE3B,WAAY;MAAAe,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACxB,EAAA,CAzBQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}